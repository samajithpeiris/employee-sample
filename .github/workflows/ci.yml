name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
          # disable health check to speed up tests
   #     options: >-
    #      --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'" 
     #     --health-interval 10s
      #    --health-timeout 5s
       #   --health-retries 5

    steps:  
      - name: Install MongoDB
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg curl
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo tee /usr/share/keyrings/mongodb-server-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/mongodb-server-keyring.gpg] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org
          sudo systemctl start mongod
          sudo systemctl enable mongod



      - name: Checkout repository
        uses: actions/checkout@v3

      # Build and run containers using Docker Compose
      - name: Set up Docker Compose
        run: docker-compose --version

      - name: Build and start containers
        run: docker-compose up --build -d

      # Wait for services to be ready (adjust sleep time if necessary)
      - name: Wait for services to be ready
        run: sleep 180

      - name: Check if MongoDB Command Exists
        run: |
          if command -v mongo &> /dev/null
          then
            echo "MongoDB CLI is available."
            mongo --version
          else
            echo "MongoDB CLI is NOT installed on this runner."
            exit 1
          fi


      # Run Playwright tests (assuming tests are in your project)
      - name: Run Playwright tests
        run: npx playwright test --reporter=dot

      # Shut down the containers after tests
      - name: Shut down Docker Compose
        run: docker-compose down
